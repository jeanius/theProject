package com.jeanpower.reggieproject;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.Log;
import android.view.View;

public class DrawArrow extends View {
    Paint paint = new Paint();
    View start;
    View end;    

    public DrawArrow(Context context, View startView, View endView) {
        super(context);   
        paint.setStrokeWidth(5);
        paint.setStyle(Paint.Style.STROKE); 
        start = startView;
        end = endView;
    }

    public void onDraw(Canvas canvas) {
    	
    		Log.d("I'm here!", "here");
    	 	paint.setColor(Color.BLACK);     
            canvas.drawLine(start.getX() + (start.getWidth()/2), start.getY()+ (start.getHeight()/2), end.getX() + (end.getWidth()/2), end.getY() + (end.getHeight()/2), paint);
            Log.d("This is startX", start.getX() +"");
            Log.d("This is startY", start.getY() +"");
            
            Log.d("This is endX", end.getX() +"");
            Log.d("This is endY", end.getY() +"");
    }
    
    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    	 int desiredWidth = 100;
    	    int desiredHeight = 100;

    	    int widthMode = MeasureSpec.getMode(widthMeasureSpec);
    	    int widthSize = MeasureSpec.getSize(widthMeasureSpec);
    	    int heightMode = MeasureSpec.getMode(heightMeasureSpec);
    	    int heightSize = MeasureSpec.getSize(heightMeasureSpec);

    	    int width;
    	    int height;

    	    //Measure Width
    	    if (widthMode == MeasureSpec.EXACTLY) {
    	        //Must be this size
    	        width = widthSize;
    	    } else if (widthMode == MeasureSpec.AT_MOST) {
    	        //Can't be bigger than...
    	        width = Math.min(desiredWidth, widthSize);
    	    } else {
    	        //Be whatever you want
    	        width = desiredWidth;
    	    }

    	    //Measure Height
    	    if (heightMode == MeasureSpec.EXACTLY) {
    	        //Must be this size
    	        height = heightSize;
    	    } else if (heightMode == MeasureSpec.AT_MOST) {
    	        //Can't be bigger than...
    	        height = Math.min(desiredHeight, heightSize);
    	    } else {
    	        //Be whatever you want
    	        height = desiredHeight;
    	    }

    	    //MUST CALL THIS
    	    setMeasuredDimension(width, height);
    }

}