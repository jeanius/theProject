//Presenter - Gateway to model, provides View with data it needs.

package com.jeanpower.reggieproject;

import android.util.Log;
import android.view.View;

public class Game {

	private Instruction first;
	private Instruction currPos;
	private int [] registers;
	private MainActivity activity;


	/**
	 * Constructor. Zeros all registers.                
	 * <p>
	 * @return void
	 */	
	public Game(MainActivity a){
		activity = a;
		registers = new int [activity.getMaxReg()];

		for (int i = 0; i<activity.getMaxReg(); i++)
		{
			registers[i] = 0;
		}
	}

	public void runGame(){

	}

	public void getInstructionSet(){}

	public void newInstruction(int resourceID){

		switch (resourceID) {
		case R.id.new_arrow_button:
			// do arrow
			break;
		case R.id.new_box_button:
			// do box
			break;
		case R.id.run_button:
			this.runGame();
			break;
		case R.id.new_end_button:
			//do end
			break;
		}

	}

	public void updateIns(Object o){}

	public void delBox(Instruction delete){}

	public void delArrow(Instruction delete){}

	public void delEnd(Instruction delete){}

	/**
	 * Sets current position within running game              
	 * <p>
	 * @param Instruction. New current instruction
	 * @return void
	 */	
	public void setCurrPos(Instruction newPos){

		currPos = newPos;
	}

	/**
	 * Returns data held in specific register            
	 * <p>
	 * @param int. Index/number of register.
	 * @return int
	 */	
	public int getRegData(int registerNum){

		return registers[registerNum];
	}

	/**
	 * Increments data held in specific register        
	 * <p>
	 * Increments, then calls method in activity to pull data and update UI
	 * <p>
	 * @param int. Index/number of register.
	 * @return void
	 */	
	public void incrementReg(int registerNum){

		int newNum = registers[registerNum]+1;
		registers[registerNum] = newNum;
		activity.setRegisters();
	}

	/**
	 * Decrements data held in specific register        
	 * <p>
	 * Decrements, then calls method in activity to pull data and update UI
	 * <p>
	 * @param int. Index/number of register.
	 * @return void
	 */	
	public void decrementReg(int registerNum){

		registers[registerNum] = registers[registerNum]--;
		activity.setRegisters();
	}

	/**
	 * Zeros a specific register        
	 * <p>
	 * Zeros, then calls method in activity to pull data and update UI
	 * <p>
	 * @param int. Index/number of register.
	 * @return void
	 */	
	public void zeroReg(int registerNum){

		registers[registerNum] = 0;;
		activity.setRegisters();
	}
}
