package com.jeanpower.reggieproject;

import java.util.ArrayList;

import com.github.amlcurran.showcaseview.ShowcaseView;
import com.github.amlcurran.showcaseview.targets.ViewTarget;

import android.app.Dialog;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.github.amlcurran.showcaseview.ShowcaseView;

public class Tutorial implements View.OnClickListener{

	MainActivity main;
	Dialog dialog;
	Button yesButton;
	Button noButton;
	TextView tutText;
	RelativeLayout container;
	CharSequence [] tutTexts;
	String [] showcaseText;
	String [] showcaseTitles;
	int counter;
	ShowcaseView sv;
	Game game;

	public Tutorial(MainActivity ma, Game g) {

		main = ma;
		game = g;
		counter = 0;
		Resources res = main.getResources();
		tutTexts = res.getTextArray(R.array.tutorial_text);		
		showcaseText = res.getStringArray(R.array.showcase_text);
		showcaseTitles = res.getStringArray(R.array.showcase_title_text);	
		
		dialog = new Dialog(main);
		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		dialog.setContentView(R.layout.tutorial);
		dialog.setCanceledOnTouchOutside(false);

		tutText = (TextView) dialog.findViewById(R.id.welcomeText);
		tutText.setText(tutTexts[counter]);

		container = (RelativeLayout) dialog.findViewById(R.id.container);
		
		RelativeLayout.LayoutParams yesParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		//yesParams.addRule(RelativeLayout.BELOW, R.id.welcomeText);
		yesParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE);
		yesParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE);

		RelativeLayout.LayoutParams noParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		//noParams.addRule(RelativeLayout.BELOW, R.id.welcomeText);
		noParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE);
		noParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);

		yesParams.setMargins(0, 10, 0, 10);
		noParams.setMargins(0, 10, 0, 10);

		yesButton = (Button) dialog.findViewById(R.id.yesButton);
		noButton = (Button) dialog.findViewById(R.id.noButton);
		
		yesButton.setOnClickListener(this);
		noButton.setOnClickListener(this);
		yesButton.setLayoutParams(yesParams);
		noButton.setLayoutParams(noParams);

		dialog.show();
	}

	@Override
	public void onClick(View view) {
		
		Log.d("Got in here with", view +"");
		Log.d("Got in here with", view.getId() + "");
		
		int resid = view.getId();

		switch (resid){
		case R.id.noButton:
			SharedPreferences setPreferences = PreferenceManager.getDefaultSharedPreferences(main);
			setPreferences.edit().putBoolean("tutorial", false).commit();
			dialog.dismiss();
			break;
		case R.id.yesButton:
			counter ++;
			this.continueTutorial();
			break;
		default:
			sv.hide();
			dialog.show();
			break;
		}
	}

	public void continueTutorial(){
		
		ImageView iv = (ImageView) dialog.findViewById(R.id.reggieSmile);
		Drawable myDrawable;
		ViewTarget target;
		tutText.setText(tutTexts[counter]);
		ArrayList<Instruction> instructions;
		
		switch (counter){
			case 1:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_happy);
				iv.setImageDrawable(myDrawable);
				yesButton.setText(main.getResources().getText(R.string.cont));
				noButton.setText(main.getResources().getText(R.string.stop));
			break;
			
			case 2:
				dialog.hide();
				target = new ViewTarget(R.id.register_frame, main);
				sv = new ShowcaseView.Builder(main, true)
				.setTarget(target)
				.setContentTitle(showcaseTitles[0])
				.setContentText(showcaseText[0])
				.setOnClickListener(this)
				.build();	
			break;
			
			case 3:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_cool);
				iv.setImageDrawable(myDrawable);		
			break;
		
			case 4:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_awesome);
				iv.setImageDrawable(myDrawable);		
			break;
		
			case 7:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_super);
				iv.setImageDrawable(myDrawable);		
			break;
			
			case 8:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_cool);
				iv.setImageDrawable(myDrawable);		
			break;
			
			case 10:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_shy);
				iv.setImageDrawable(myDrawable);		
				break;
				
			case 12:
				myDrawable = main.getResources().getDrawable(R.drawable.reg_cool);
				iv.setImageDrawable(myDrawable);	
				
				dialog.hide();
				target = new ViewTarget(R.id.new_box_button, main);
				sv = new ShowcaseView.Builder(main, true)
				.setTarget(target)
				.setContentTitle(showcaseTitles[1])
				.setContentText(showcaseText[1])
				.setOnClickListener(this)
				.build();	
				break;
				
			case 13:
				
				dialog.hide();
				target = new ViewTarget(R.id.new_arrow_button, main);
				sv = new ShowcaseView.Builder(main, true)
				.setTarget(target)
				.setContentTitle(showcaseTitles[2])
				.setContentText(showcaseText[2])
				.setOnClickListener(this)
				.build();	
				break;
				
			case 14:
				
				
			default:
				break;
		}
	}

}
