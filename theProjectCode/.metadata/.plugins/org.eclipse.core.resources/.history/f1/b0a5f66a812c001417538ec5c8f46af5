package com.jeanpower.reggieproject.test;


import junit.framework.TestCase;
import com.jeanpower.reggieproject.Arrow;
import com.jeanpower.reggieproject.Box;
import com.jeanpower.reggieproject.End;
import com.jeanpower.reggieproject.Game;
import com.jeanpower.reggieproject.MainActivity;


/**
 * JUnit tests of Instructions (Arrow, Box, End).
 * 1) Constructors are not tested; just assignment of instance variables
 * 2) Getters are not tested; just assignment of instance variables.
 * @author Jean
 *
 */
public class InstructionTest extends TestCase{

	static Game game;
	static Box box1;
	static Box box2;
	static Box box3;
	static Arrow arrow4;
	static Arrow arrow5;
	static Arrow arrow6;
	static End end7;
	static End end8;
	static End end9;
	
	@Override
	public void setUp(){

		MainActivity ma = new MainActivity();
		game = new Game(ma); //Required for creating instructions

		box1 = new Box(game);
		box2 = new Box(game);
		box3 = new Box(game);
		arrow4 = new Arrow(game);
		arrow5 = new Arrow(game);
		arrow6 = new Arrow(game);
		end7 = new End(game);
		end8 = new End(game);

		box1.setId(1);
		box2.setId(2);
		box3.setId(3);
		arrow4.setId(4);
		arrow5.setId(5);
		arrow6.setId(6);
		end7.setId(7);
		end8.setId(8);

		box1.setSucc(end8);
		end8.setPred(box1);
		end8.setSucc(box2);
		box2.setPred(end8);
		box2.setSucc(arrow4);
		arrow4.setPred(box2);
		arrow4.setSucc(arrow6);
		arrow6.setPred(arrow4);
		arrow6.setSucc(end7);
		end7.setPred(arrow6);
		end7.setSucc(box3);
		box3.setPred(end7);
		box3.setSucc(arrow5);
		arrow5.setPred(box3);

		arrow4.setType(); //Set Arrow4 to decrement
		arrow4.setTo(box3);
		arrow5.setTo(box1);

		arrow4.calculateSpaces();
		arrow5.calculateSpaces();
		arrow6.calculateSpaces();

	}
	
	public void testCalculateSpacesBranch() {
		int branchArrowSpaces = arrow4.getSpaces();
		assertEquals("Branch arrow spaces", branchArrowSpaces, 2); //Box 2 and Box 3, ignoring end, other arrow
	}
	
	public void testCalculateSpacesLoop() {
		int loopArrowSpaces = arrow5.getSpaces();
		assertEquals("Branch arrow spaces", loopArrowSpaces, 3); //Box 1, 2, 3, ignoring end, other arrow
	}
	
	public void testCalculateSpacesSingle(){
		int singleSpaces = arrow6.getSpaces();
		assertEquals("Single arrow space", singleSpaces, 1); //Box 1, 2, 3, ignoring end, other arrow
		
	}
}